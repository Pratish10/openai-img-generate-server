name: Build Image using docker

on:
  push:
    branches: ["master"]

# env:
#   DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}

jobs:
  deploy:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.26.1" # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to .env
        run: aws secretsmanager get-secret-value --secret-id openai-img-generate --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: img-generate-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY

      # - name: Run Datree Policy Check
      #   uses: datreeio/action-datree@main
      #   with:
      #     path: "K8s/*.yaml"
      #     cliArguments: "--only-k8s-files"

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-south-1 --name openai-img-generate-server

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
